/*

Cleaning Data in POSTGRESQL

*/


Select *
From nashville_housing

--------------------------------------------------------------------------------------------------------------------------

-- Standardize Date Format


SELECT saleDateConverted, SaleDate::date
FROM nashville_housing;



Update Nashville_Housing
SET SaleDate = SaleDate::date


 --------------------------------------------------------------------------------------------------------------------------

-- Populate Property Address data

Select *
From nashville_housing
--Where PropertyAddress is null
order by ParcelID


SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, COALESCE(a.PropertyAddress, b.PropertyAddress)
FROM nashville_housing a
JOIN nashville_housing b ON a.ParcelID = b.ParcelID AND a.UniqueID <> b.UniqueID
WHERE a.propertyaddress IS NULL;




UPDATE nashville_housing AS a
SET PropertyAddress = COALESCE(a.PropertyAddress, b.PropertyAddress)
FROM nashville_housing AS b
WHERE a.ParcelID = b.ParcelID
  AND a.UniqueID <> b.UniqueID
  AND a.PropertyAddress IS NULL;





--------------------------------------------------------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address, City, State)


Select PropertyAddress
From nashville_housing
--Where PropertyAddress is null
--order by ParcelID
SELECT
    SUBSTRING(PropertyAddress, 1, POSITION(',' IN PropertyAddress) - 1) as Address,
    SUBSTRING(PropertyAddress, POSITION(',' IN PropertyAddress) + 1, LENGTH(PropertyAddress)) as Address
FROM nashville_housing;



ALTER TABLE Nashville_Housing
Add PropertySplitAddress Varchar(255);

Update Nashville_housing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, POSITION(',' IN PropertyAddress) - 1)


ALTER TABLE Nashville_Housing
Add PropertySplitCity Varchar(255);

Update Nashville_Housing
SET PropertySplitCity = SUBSTRING(PropertyAddress, POSITION(',' IN PropertyAddress) + 1, LENGTH(PropertyAddress))




Select *
From nashville_housing





Select OwnerAddress
From nashville_housing


SELECT
    SPLIT_PART(REPLACE(OwnerAdress, ',', '.'), '.', 3) AS Part3,
    SPLIT_PART(REPLACE(OwnerAdress, ',', '.'), '.', 2) AS Part2,
    SPLIT_PART(REPLACE(OwnerAdress, ',', '.'), '.', 1) AS Part1
FROM nashville_housing;




ALTER TABLE Nashville_Housing
Add OwnerSplitAddress Varchar(255);

Update Nashville_Housing
SET OwnerSplitAddress = SPLIT_PART(REPLACE(OwnerAdress, ',', '.'), '.', 1)


ALTER TABLE Nashville_Housing
Add OwnerSplitCity Varchar(255);

Update Nashville_Housing
SET OwnerSplitCity = SPLIT_PART(REPLACE(OwnerAdress, ',', '.'), '.', 2)



ALTER TABLE Nashville_Housing
Add OwnerSplitState Nvarchar(255);

Update Nashville_Housing
SET OwnerSplitState = SPLIT_PART(REPLACE(OwnerAdress, ',', '.'), '.', 3)



Select *
From nashville_housing




--------------------------------------------------------------------------------------------------------------------------


-- Change Y and N to Yes and No in "Sold as Vacant" field


Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From nashville_housing
Group by SoldAsVacant
order by 2




Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From nashville_housing


Update Nashville_Housing
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END






-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates

WITH RowNumCTE AS (
    SELECT *,
        ROW_NUMBER() OVER (
            PARTITION BY ParcelID, PropertyAddress, SalePrice, SaleDate, LegalReference
            ORDER BY UniqueID
        ) AS row_num
    FROM nashville_housing
)

SELECT *
FROM RowNumCTE;

--order by ParcelID

WITH RowNumCTE AS (
    SELECT *,
        ROW_NUMBER() OVER (
            PARTITION BY ParcelID, PropertyAddress, SalePrice, SaleDate, LegalReference
            ORDER BY UniqueID
        ) AS row_num
    FROM nashville_housing
)
Select * From RowNumCTE
Where row_num > 1
Order by PropertyAddress



Select *
From nashville_housing


--- Unused columns drop
ALTER TABLE nashville_housing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate


Select *
From nashville_housing
